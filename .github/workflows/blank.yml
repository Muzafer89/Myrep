name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run tests
      - name: Run tests
        run: npm test

      # Step 5: Build the application
      - name: Build application
        run: npm run build

      # Step 6: Archive the build output (optional)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/

                      - name: Jinja2 Engine Repo
  # You may pin to the exact commit or the version.
  # uses: fletort/jinja2-template-action@cee4fb7f250dab558dbbb5c527931bf9d6095380
  uses: fletort/jinja2-template-action@v1.2.0
  with:
    # Key, value pairs in .env file format (key=value)
    variables: # optional, default is 
    # Put to `true` to keep original template file.
    keep_template: # optional
    # Source file contening inputs variable for the jinja template.
    data_file: # optional, default is 
    # Format of the `data_file`. Can be `env`, `ini`, `yaml`, `json` or `automatic` (for automatic detection). The automatic detction is based on the extension then on the content.
    data_format: # optional, default is automatic
    # Link to a file contening inputs variable for the jinja template.
    data_url: # optional, default is 
    # Format of the `url_file`. Can be `env`, `ini`, `yaml`, `json` or `automatic` (for automatic detection). The automatic detction is based on the content-type http header then on the content.
    data_url_format: # optional, default is automatic
    # 
    undefined_behaviour: # optional, default is 
          
